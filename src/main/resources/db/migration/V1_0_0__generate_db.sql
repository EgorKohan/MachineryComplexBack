CREATE TABLE agricultural_operations
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name        VARCHAR(255),
    work_volume FLOAT,
    unit        VARCHAR(255),
    start_date  TIMESTAMP WITHOUT TIME ZONE,
    end_date    TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_agricultural_operations PRIMARY KEY (id)
);

CREATE TABLE periods
(
    id             BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    work_plan_id   BIGINT,
    start_date     date,
    end_date       date,
    work_per_shift FLOAT,
    CONSTRAINT pk_periods PRIMARY KEY (id)
);

CREATE TABLE roles
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    role_type VARCHAR(255),
    CONSTRAINT pk_roles PRIMARY KEY (id)
);

CREATE TABLE self_propelled_machine_templates
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    machine_name VARCHAR(255),
    CONSTRAINT pk_self_propelled_machine_templates PRIMARY KEY (id)
);

CREATE TABLE self_propelled_machines
(
    id                     BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    inventory_name         VARCHAR(255),
    machine_template_id    BIGINT                                  NOT NULL,
    actual_service_life    INTEGER,
    normative_service_life INTEGER,
    initial_cost           DECIMAL,
    residual_value         DECIMAL,
    trk                    FLOAT,
    path_to_photo          VARCHAR(255),
    CONSTRAINT pk_self_propelled_machines PRIMARY KEY (id)
);

CREATE TABLE trailer_templates
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    trailer_name VARCHAR(255),
    CONSTRAINT pk_trailer_templates PRIMARY KEY (id)
);

CREATE TABLE trailers
(
    id                     BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    inventory_number       VARCHAR(255),
    trailer_template_id    BIGINT                                  NOT NULL,
    actual_service_life    INTEGER,
    normative_service_life INTEGER,
    initial_cost           DECIMAL,
    residual_value         DECIMAL,
    trk                    FLOAT,
    path_to_photo          VARCHAR(255),
    CONSTRAINT pk_trailers PRIMARY KEY (id)
);

CREATE TABLE users
(
    id       BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    email    VARCHAR(255),
    password VARCHAR(255),
    CONSTRAINT pk_users PRIMARY KEY (id)
);

CREATE TABLE users_to_roles
(
    role_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    CONSTRAINT pk_users_to_roles PRIMARY KEY (role_id, user_id)
);

CREATE TABLE work_plans
(
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    machine_template_id BIGINT,
    trailer_template_id BIGINT,
    operation_id        BIGINT,
    CONSTRAINT pk_work_plans PRIMARY KEY (id)
);

ALTER TABLE self_propelled_machine_templates
    ADD CONSTRAINT uc_self_propelled_machine_templates_machine_name UNIQUE (machine_name);

ALTER TABLE trailer_templates
    ADD CONSTRAINT uc_trailer_templates_trailer_name UNIQUE (trailer_name);

ALTER TABLE users
    ADD CONSTRAINT uc_users_email UNIQUE (email);

ALTER TABLE periods
    ADD CONSTRAINT FK_PERIODS_ON_WORK_PLAN FOREIGN KEY (work_plan_id) REFERENCES work_plans (id);

ALTER TABLE self_propelled_machines
    ADD CONSTRAINT FK_SELF_PROPELLED_MACHINES_ON_MACHINE_TEMPLATE FOREIGN KEY (machine_template_id) REFERENCES self_propelled_machine_templates (id);

ALTER TABLE trailers
    ADD CONSTRAINT FK_TRAILERS_ON_TRAILER_TEMPLATE FOREIGN KEY (trailer_template_id) REFERENCES trailer_templates (id);

ALTER TABLE work_plans
    ADD CONSTRAINT FK_WORK_PLANS_ON_MACHINETEMPLATE FOREIGN KEY (machine_template_id) REFERENCES self_propelled_machine_templates (id);

ALTER TABLE work_plans
    ADD CONSTRAINT FK_WORK_PLANS_ON_OPERATION FOREIGN KEY (operation_id) REFERENCES agricultural_operations (id);

ALTER TABLE work_plans
    ADD CONSTRAINT FK_WORK_PLANS_ON_TRAILERTEMPLATE FOREIGN KEY (trailer_template_id) REFERENCES trailer_templates (id);

ALTER TABLE users_to_roles
    ADD CONSTRAINT fk_usetorol_on_role FOREIGN KEY (role_id) REFERENCES roles (id);

ALTER TABLE users_to_roles
    ADD CONSTRAINT fk_usetorol_on_user FOREIGN KEY (user_id) REFERENCES users (id);